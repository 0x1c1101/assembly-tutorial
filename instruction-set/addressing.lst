     1                                  ;; NOTE that this is not a program meant to be run.  It is just a way to demonstrate
     2                                  ;; that the instructions and addressing modes to assemble without error.
     3                                  
     4                                          section .text
     5                                  global start
     6                                  start:
     7                                          ;; register addressing mode
     8 00000000 4889D8                          mov rax, rbx
     9                                  
    10                                          ; direct (or immediate) addressing mode
    11                                          ; you cannot store to a constant, so only the source may be a constant
    12 00000003 B80A000000                      mov rax, 10 	; source operand is a constant
    13                                  
    14                                          ; indirect addressing mode
    15                                          ; one of the operands is the address of the memory location in a register
    16 00000008 488B03                          mov rax, [rbx]
    17 0000000B 488903                          mov [rbx], rax
    18                                          ; invalid!
    19                                          ; mov [rax], [rbx]
    20                                  
    21                                          
    22                                          ; indirect with displacement
    23                                          ; address = base + displacement
    24                                          ;
    25                                          ; typical use is to access structure elements (the displacement is the offset
    26                                          ; to the structure member)
    27 0000000E 488B4318                        mov rax, [24+rbx] 	; base is rbx, displacement is 24
    28 00000012 48894318                        mov [24+rbx], rax
    29                                  
    30                                          ; indirect with displacement and scaled index
    31 00000016 488B049D[00000000]              mov rax, [array + rbx * 4]
    32 0000001E 4889049D[00000000]              mov [array + rbx * 4], rax
    33                                  
    34                                          ; indirect with displacement in a second register
    35 00000026 488B040B                        mov rax, [rbx + rcx]
    36 0000002A 4889040B                        mov [rbx + rcx], rax
    37                                          
    38                                          ; indirect with displacement in a second register scaled
    39 0000002E 488B048B                        mov rax, [rbx + rcx *4]
    40 00000032 4889048B                        mov [rbx + rcx *4], rax
    41                                          
    42                                          ; indirect with displacement and another displacement in a second register scaled
    43 00000036 488B448B18                      mov rax, [24 + rbx + rcx *4]
    44 0000003B 4889448B18                      mov [24 + rbx + rcx *4], rax
    45                                          
    46                                         section .bss 
    47 00000000 <res 00002000>          array: resb 8192
    48                                          
